name: Build and Deploy Java-App

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY_NAME: my-java-app
  CODE_DEPLOY_APP_NAME: MyJavaWebApp
  CODE_DEPLOY_GROUP_NAME: MyJavaWebApp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${ECR_REGISTRY}/${{ env.ECR_REPOSITORY_NAME }}:${IMAGE_TAG} -f Dockerfile complete/
          docker push ${ECR_REGISTRY}/${{ env.ECR_REPOSITORY_NAME }}:${IMAGE_TAG}

      - name: Store image tag in SSM Parameter Store
        run: |
          aws ssm put-parameter \
            --name "/my-java-app/image-tag" \
            --value "${{ github.sha }}" \
            --type String \
            --overwrite \
            --region ${{ env.AWS_REGION }}

      - name: Create CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APP_NAME }} \
            --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --description "Deployment triggered by GitHub Actions for commit ${{ github.sha }}" \
            --region ${{ env.AWS_REGION }}
